# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage:  Build
    jobs:
    - job: BuildApi
      steps:
        - bash: echo Bash Api
        - bash: docker-compose build back
        # - task: PublishBuildArtifacts@1
        #   inputs:
        #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        #     ArtifactName: 'Api'
        #     publishLocation: 'Container'

        - bash:  ls -R /var/lib/docker/*
        - task: CopyFiles@2 
          inputs:
            SourceFolder: '/var/lib/docker/*'
            Contents: 'azure-pipelines.yml'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
# On pourrait copier /var/lib/docker/* et le publish en tant qu'artifact, puis dans le release le push...

    - job: BuildFront
      steps:
        - bash: echo Bash Front
        - bash: docker-compose build front
        # - task: CopyFiles@2
        #   inputs:
        #     SourceFolder: '$(System.DefaultWorkingDirectory)'
        #     Contents: 'azure-pipelines.yml'
        #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
        # - bash:  ls -R $(Build.ArtifactStagingDirectory)
        # - task: PublishBuildArtifacts@1
        #   inputs:
        #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        #     ArtifactName: 'Front'
        #     publishLocation: 'Container'
# steps:
# - bash: echo Dev Deployment